using Toybox.WatchUi  as Ui;
using Toybox.Graphics as Gfx;
using Toybox.System   as Sys;
using Toybox.Lang     as Lang;
using Toybox.Time;
using Toybox.Time.Gregorian;


//   Meditation time at 7.00 & 19.00, length is 12 min

class AllatRaView extends Ui.WatchFace {

	var allatRa;
	var allatRa2;
	var custFont;
	var stepPic;
	
	function initialize() {
        WatchFace.initialize();
    }
	
    function onLayout(dc) {
    	allatRa    = Ui.loadResource(Rez.Drawables.allatRa); // BLUE
    	allatRa2   = Ui.loadResource(Rez.Drawables.allatRa2);
        custFont   = Ui.loadResource(Rez.Fonts.customFont);
        stepPic    = Ui.loadResource(Rez.Drawables.steps);
    }
    
    // Update the view
    function onUpdate(dc) {
    
        var batteryPercent    	= Sys.getSystemStats().battery;
        var devSet 				= Sys.getDeviceSettings();
        var blueTooth 			= devSet.phoneConnected;
		var notif 				= devSet.notificationCount;
		var screenRes 			= devSet.screenWidth;  // 218  for 3 series  AND for 5 series is 240;		
		var info 				= Time.Gregorian.info(Time.now(), Time.FORMAT_LONG);        
        var date 				= Lang.format("$01$, $02$", [info.day_of_week, info.day.format("%02d")]);
		var clockTime   		= Sys.getClockTime();
        var timeString  		= Lang.format("$1$:$2$", [clockTime.hour, clockTime.min.format("%02d")]);
        var offsetSec 			= clockTime.timeZoneOffset;
        var utcTime 			= Time.now().add(new Time.Duration(-offsetSec));        
        var utcCalInfo 			= Time.Gregorian.info(utcTime, Time.FORMAT_SHORT);
        var infoAct 			= ActivityMonitor.getInfo();
		var steps 				= infoAct.steps;
		
        View.onUpdate(dc);
        
        if(screenRes == 218){
        	if(utcCalInfo.hour == 7 && utcCalInfo.min <= 12 || utcCalInfo.hour == 19 && utcCalInfo.min <= 12){
        	dc.drawBitmap(38, -2, allatRa); // BLUE  dc.drawBitmap(38, -2, allatRa)
        } else{
        	dc.drawBitmap(47, -2, allatRa2); // dc.drawBitmap(47, -2, allatRa2);
        }
        
        dc.setColor(Gfx.COLOR_WHITE, Gfx.COLOR_TRANSPARENT);        
        dc.drawText(dc.getWidth()/2, 70,  custFont, timeString, Gfx.TEXT_JUSTIFY_CENTER); 
        dc.setColor(Gfx.COLOR_LT_GRAY, Gfx.COLOR_TRANSPARENT);
        dc.drawText(dc.getWidth()/2-25, 139, Gfx.FONT_SYSTEM_SMALL, date, Gfx.TEXT_JUSTIFY_RIGHT);
        
        // Draw notifications
        if(notif != 0){
        	dc.drawRectangle(97, 175, 34, 23);
        	dc.drawLine(97, 175, 115, 190);
        	dc.drawLine(130, 175, 114, 189);
        	dc.setColor(Gfx.COLOR_WHITE, Gfx.COLOR_TRANSPARENT);
        	dc.fillCircle(130, 175, 10);
        	dc.setColor(Gfx.COLOR_BLACK, Gfx.COLOR_TRANSPARENT);
        	dc.drawText(130, 166, Gfx.FONT_SYSTEM_XTINY, notif, Gfx.TEXT_JUSTIFY_CENTER);
        } else {
        	dc.drawBitmap(dc.getWidth()/2-16, 168, stepPic);
        	dc.drawText(dc.getWidth()/2+41,166,Gfx.FONT_MEDIUM, steps, Gfx.TEXT_JUSTIFY_CENTER);
        }
        
        // Battery
        dc.setColor(Gfx.COLOR_WHITE, Gfx.COLOR_TRANSPARENT);
        if (batteryPercent < 50 && batteryPercent >= 26){
        	dc.setColor(Gfx.COLOR_YELLOW, Gfx.COLOR_TRANSPARENT);
        	} else if (batteryPercent <=25){
        		dc.setColor(Gfx.COLOR_RED, Gfx.COLOR_TRANSPARENT);
        }
        dc.fillRectangle(2, 79, (2 * (batteryPercent))+8, 1);
        
        // Red separator
        if(blueTooth == true){
        	dc.setColor(Gfx.COLOR_RED, Gfx.COLOR_TRANSPARENT);
        }else{
        	dc.setColor(Gfx.COLOR_LT_GRAY, Gfx.COLOR_TRANSPARENT);
        }
        dc.fillRectangle(87, 150, 3, 65);
        }else{
        
        //***************************** 240 *************************************************
        
        	if(utcCalInfo.hour == 7 && utcCalInfo.min <= 12 || utcCalInfo.hour == 19 && utcCalInfo.min <= 12){
        		dc.drawBitmap(48, -3, allatRa); // BLUE   dc.drawBitmap(48, -3, allatRa)
        	} else {
        		dc.drawBitmap(57, -3, allatRa2); // dc.drawBitmap(57, -3, allatRa2);
        	}
        
        dc.setColor(Gfx.COLOR_WHITE, Gfx.COLOR_TRANSPARENT);        
        dc.drawText(dc.getWidth()/2+3, 70,  custFont, timeString, Gfx.TEXT_JUSTIFY_CENTER); 
        dc.setColor(Gfx.COLOR_LT_GRAY, Gfx.COLOR_TRANSPARENT);
        dc.drawText(dc.getWidth()/2-25, 139, Gfx.FONT_SYSTEM_SMALL, date, Gfx.TEXT_JUSTIFY_RIGHT);
        
        // Draw notifications
        if(notif != 0){
        	dc.drawRectangle(107, 185, 37, 26);
        	dc.drawLine(107, 185, 126, 200);
        	dc.drawLine(126, 200, 143, 185);
        	dc.setColor(Gfx.COLOR_WHITE, Gfx.COLOR_TRANSPARENT);
        	dc.fillCircle(143, 182, 13);
        	dc.setColor(Gfx.COLOR_BLACK, Gfx.COLOR_TRANSPARENT);
        	dc.drawText(143, 169, Gfx.FONT_XTINY, notif, Gfx.TEXT_JUSTIFY_CENTER);
        } else {
        	dc.drawBitmap(dc.getWidth()/2-16, 180, stepPic);
        	dc.drawText(dc.getWidth()/2+37, 180, Gfx.FONT_TINY, steps, Gfx.TEXT_JUSTIFY_CENTER);
        }
        
        // Battery
        dc.setColor(Gfx.COLOR_WHITE, Gfx.COLOR_TRANSPARENT);
        if (batteryPercent < 50 && batteryPercent >= 26){
        	dc.setColor(Gfx.COLOR_YELLOW, Gfx.COLOR_TRANSPARENT);
        	}else if(batteryPercent <=25){
        		dc.setColor(Gfx.COLOR_RED, Gfx.COLOR_TRANSPARENT);
        	}
        dc.fillRectangle(5, 79, batteryPercent*2.3, 1);
        
        // Red separator
        if(blueTooth == true){
        	dc.setColor(Gfx.COLOR_RED, Gfx.COLOR_TRANSPARENT);
        }else{
        	dc.setColor(Gfx.COLOR_LT_GRAY, Gfx.COLOR_TRANSPARENT);
        }
        dc.fillRectangle(97, 150, 3, 85);
        }               
    }
}
